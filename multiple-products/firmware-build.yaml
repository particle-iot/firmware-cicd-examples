name: Firmware CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        platform: [photon, electron, argon, boron, bsom, b5som]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile application
        id: compile
        uses: particle-iot/compile-action@v1
        with:
          particle-platform-name: ${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ matrix.platform }}-${{ steps.compile.outputs.device-os-version }}
          path: |
            ${{ steps.compile.outputs.firmware-path }}
            ${{ steps.compile.outputs.target-path }}

  flash:
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: photon
            product-id: <photon-product-id>
            device-id: <photon-development-device-id>
          - platform: electron
            product-id: <electron-product-id-two>
            device-id: <electron-development-device-id>
          - platform: boron
            product-id: <boron-product-id-three>
            device-id: <boron-development-device-id>
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Find firmware bin file to flash
        id: find-bin
        run: |
          BIN_FILE=$(find build-artifacts -name 'firmware-*.bin' | grep ${{ matrix.platform }} | head -n 1)
          echo "bin-file=$BIN_FILE" >> $GITHUB_OUTPUT

      - name: Set product access token secret from matrix
        run: |
          echo "PRODUCT_ACCESS_TOKEN=$(echo ${{ secrets[format('PARTICLE_ACCESS_TOKEN_{0}', matrix.product-id)] }})" >> $GITHUB_ENV

      - name: Flash firmware to test device
        uses: particle-iot/flash-device-action@v1
        with:
          particle-access-token: ${{ env.PRODUCT_ACCESS_TOKEN }}
          device-id: ${{ matrix.device-id }}
          firmware-path: ${{ steps.find-bin.outputs.bin-file }}
